// Listing generated from "server.dylib" by linux_vtable_dump.ida
// vtable block @ 0x00D5C320
/*0*/	CSENT_AI::~CSENT_AI()
/*1*/	CSENT_AI::~CSENT_AI()
/*2*/	CBaseEntity::SetRefEHandle(CBaseHandle  const&)
/*3*/	CBaseEntity::GetRefEHandle(void)
/*4*/	CBaseEntity::GetCollideable(void)
/*5*/	CBaseEntity::GetNetworkable(void)
/*6*/	CBaseEntity::GetBaseEntity(void)
/*7*/	CBaseEntity::GetModelIndex(void)
/*8*/	CBaseEntity::GetModelName(void)
/*9*/	CBaseEntity::SetModelIndex(int)
/*10*/	CAI_BaseNPC::GetServerClass(void)
/*11*/	CAI_BaseNPC::YouForgotToImplementOrDeclareServerClass(void)
/*12*/	CSENT_AI::GetDataDescMap(void)
/*13*/	CBaseAnimating::TestCollision(Ray_t  const&,uint,CGameTrace &)
/*14*/	CBaseAnimating::TestHitboxes(Ray_t  const&,uint,CGameTrace &)
/*15*/	CBaseEntity::ComputeWorldSpaceSurroundingBox(Vector *,Vector *)
/*16*/	CBaseEntity::ShouldCollide(int,int)
/*17*/	CBaseEntity::SetOwnerEntity(CBaseEntity*)
/*18*/	CBaseEntity::ShouldTransmit(CCheckTransmitInfo  const*)
/*19*/	CSENT_AI::UpdateTransmitState(void)
/*20*/	CBaseCombatCharacter::SetTransmit(CCheckTransmitInfo *,bool)
/*21*/	CAI_BaseNPC::GetTracerType(void)
/*22*/	CSENT_AI::Spawn(void)
/*23*/	CSENT_AI::Precache(void)
/*24*/	CAI_BaseActor::SetModel(char  const*)
/*25*/	CAI_BaseNPC::PostConstructor(char  const*)
/*26*/	CBaseEntity::PostClientActive(void)
/*27*/	CBaseEntity::ParseMapData(CEntityMapData *)
/*28*/	CSENT_AI::KeyValue(char  const*,char  const*)
/*29*/	CBaseEntity::KeyValue(char  const*,float)
/*30*/	CBaseEntity::KeyValue(char  const*,Vector  const&)
/*31*/	CBaseEntity::GetKeyValue(char  const*,char *,int)
/*32*/	CAI_BaseNPC::Activate(void)
/*33*/	CBaseEntity::SetParent(CBaseEntity*,int)
/*34*/	CSENT_AI::ObjectCaps(void)
/*35*/	CSENT_AI::AcceptInput(char  const*,CBaseEntity *,CBaseEntity *,variant_t,int)
/*36*/	CBaseAnimating::GetInputDispatchEffectPosition(char  const*,Vector &,QAngle &)
/*37*/	CAI_BaseNPC::DrawDebugGeometryOverlays(void)
/*38*/	CAI_BaseNPC::DrawDebugTextOverlays(void)
/*39*/	CAI_BehaviorHost<CAI_BaseNPC>::Save(ISave &)
/*40*/	CAI_BehaviorHost<CAI_BaseNPC>::Restore(IRestore &)
/*41*/	CAI_BaseNPC::ShouldSavePhysics(void)
/*42*/	CBaseEntity::OnSave(IEntitySaveUtils *)
/*43*/	CSENT_AI::OnRestore(void)
/*44*/	CBaseEntity::RequiredEdictIndex(void)
/*45*/	CBaseEntity::MoveDone(void)
/*46*/	CBaseEntity::Think(void)
/*47*/	CBaseEntity::NetworkStateChanged_m_nNextThinkTick(void)
/*48*/	CBaseEntity::NetworkStateChanged_m_nNextThinkTick(void *)
/*49*/	CBaseAnimating::GetBaseAnimating(void)
/*50*/	CAI_ExpresserHost<CAI_BaseHumanoid>::GetResponseSystem(void)
/*51*/	CAI_ExpresserHost<CAI_BaseHumanoid>::DispatchResponse(char  const*)
/*52*/	CSENT_AI::Classify(void)
/*53*/	CBaseEntity::DeathNotice(CBaseEntity*)
/*54*/	CBaseEntity::ShouldAttractAutoAim(CBaseEntity*)
/*55*/	CBaseEntity::GetAutoAimRadius(void)
/*56*/	CAI_BaseNPC::GetAutoAimCenter(void)
/*57*/	CBaseEntity::GetBeamTraceFilter(void)
/*58*/	CAI_BaseNPC::PassesDamageFilter(CTakeDamageInfo  const&)
/*59*/	CAI_BaseHumanoid::TraceAttack(CTakeDamageInfo  const&,Vector  const&,CGameTrace *)
/*60*/	CBaseEntity::CanBeHitByMeleeAttack(CBaseEntity*)
/*61*/	CSENT_AI::OnTakeDamage(CTakeDamageInfo  const&)
/*62*/	CBaseEntity::AdjustDamageDirection(CTakeDamageInfo  const&,Vector &,CBaseEntity*)
/*63*/	CBaseCombatCharacter::TakeHealth(float,int)
/*64*/	CBaseEntity::IsAlive(void)
/*65*/	CAI_BehaviorHost<CAI_BaseNPC>::Event_Killed(CTakeDamageInfo  const&)
/*66*/	CBaseEntity::Event_KilledOther(CBaseEntity*,CTakeDamageInfo  const&)
/*67*/	CBaseCombatCharacter::BloodColor(void)
/*68*/	CBaseEntity::IsTriggered(CBaseEntity*)
/*69*/	CAI_BaseNPC::IsNPC(void)
/*70*/	CBaseCombatCharacter::MyCombatCharacterPointer(void)
/*71*/	CBaseEntity::MyNextBotPointer(void)
/*72*/	CBaseEntity::GetDelay(void)
/*73*/	CAI_BaseNPC::IsMoving(void)
/*74*/	CBaseEntity::DamageDecal(int,int)
/*75*/	CAI_BaseNPC::DecalTrace(CGameTrace *,char  const*)
/*76*/	CAI_BaseNPC::ImpactTrace(CGameTrace *,int,char *)
/*77*/	CBaseEntity::OnControls(CBaseEntity*)
/*78*/	CBaseEntity::HasTarget(string_t)
/*79*/	CBaseEntity::IsPlayer(void)
/*80*/	CBaseEntity::IsNetClient(void)
/*81*/	CAI_BaseNPC::IsTemplate(void)
/*82*/	CBaseEntity::IsBaseObject(void)
/*83*/	CBaseEntity::IsBaseTrain(void)
/*84*/	CBaseEntity::IsBaseCombatWeapon(void)
/*85*/	CBaseEntity::IsWearable(void)
/*86*/	CBaseEntity::MyCombatWeaponPointer(void)
/*87*/	CBaseEntity::GetServerVehicle(void)
/*88*/	CBaseEntity::IsViewable(void)
/*89*/	CBaseCombatCharacter::ChangeTeam(int)
/*90*/	CBaseEntity::OnEntityEvent(EntityEvent_t,void *)
/*91*/	CAI_BaseNPC::CanStandOn(CBaseEntity *)
/*92*/	CBaseEntity::CanStandOn(edict_t *)
/*93*/	CAI_BaseNPC::GetEnemy(void)
/*94*/	CAI_BaseNPC::GetEnemy(void)
/*95*/	CBaseEntity::ViewPunch(QAngle  const&)
/*96*/	CBaseEntity::Use(CBaseEntity*,CBaseEntity*,USE_TYPE,float)
/*97*/	CSENT_AI::StartTouch(CBaseEntity *)
/*98*/	CSENT_AI::Touch(CBaseEntity *)
/*99*/	CSENT_AI::EndTouch(CBaseEntity *)
/*100*/	CBaseEntity::StartBlocked(CBaseEntity*)
/*101*/	CBaseEntity::Blocked(CBaseEntity*)
/*102*/	CBaseEntity::EndBlocked(void)
/*103*/	CBaseEntity::PhysicsSimulate(void)
/*104*/	CSENT_AI::UpdateOnRemove(void)
/*105*/	CBaseEntity::StopLoopingSounds(void)
/*106*/	CBaseEntity::SUB_AllowedToFade(void)
/*107*/	CAI_BehaviorHost<CAI_BaseNPC>::Teleport(Vector  const*,QAngle  const*,Vector  const*)
/*108*/	CBaseEntity::NotifySystemEvent(CBaseEntity*,notify_system_event_t,notify_system_event_params_t  const&)
/*109*/	CAI_BaseNPC::MakeTracer(Vector  const&,CGameTrace  const&,int)
/*110*/	CBaseEntity::GetTracerAttachment(void)
/*111*/	CAI_BaseNPC::FireBullets(FireBulletsInfo_t  const&)
/*112*/	CAI_BaseNPC::DoImpactEffect(CGameTrace &,int)
/*113*/	CBaseEntity::ModifyFireBulletsDamage(CTakeDamageInfo *)
/*114*/	CBaseEntity::Respawn(void)
/*115*/	CBaseEntity::IsLockedByMaster(void)
/*116*/	CBaseEntity::GetMaxHealth(void)
/*117*/	CAI_ExpresserHost<CAI_BaseHumanoid>::ModifyOrAppendCriteria(AI_CriteriaSet &)
/*118*/	CBaseEntity::NetworkStateChanged_m_iMaxHealth(void)
/*119*/	CBaseEntity::NetworkStateChanged_m_iMaxHealth(void *)
/*120*/	CBaseEntity::NetworkStateChanged_m_iHealth(void)
/*121*/	CBaseEntity::NetworkStateChanged_m_iHealth(void *)
/*122*/	CAI_BaseNPC::NetworkStateChanged_m_lifeState(void)
/*123*/	CAI_BaseNPC::NetworkStateChanged_m_lifeState(void *)
/*124*/	CBaseEntity::NetworkStateChanged_m_takedamage(void)
/*125*/	CBaseEntity::NetworkStateChanged_m_takedamage(void *)
/*126*/	CBaseEntity::GetDamageType(void)
/*127*/	CBaseEntity::GetDamage(void)
/*128*/	CBaseEntity::SetDamage(float)
/*129*/	CAI_BaseActor::EyePosition(void)
/*130*/	CBaseEntity::EyeAngles(void)
/*131*/	CBaseEntity::LocalEyeAngles(void)
/*132*/	CBaseEntity::EarPosition(void)
/*133*/	CAI_BaseNPC::BodyTarget(Vector  const&,bool)
/*134*/	CBaseEntity::HeadTarget(Vector  const&)
/*135*/	CBaseEntity::GetVectors(Vector *,Vector *,Vector *)
/*136*/	CBaseEntity::GetViewOffset(void)
/*137*/	CBaseEntity::SetViewOffset(Vector  const&)
/*138*/	CAI_BaseNPC::GetSmoothedVelocity(void)
/*139*/	CBaseAnimating::GetVelocity(Vector *,Vector *)
/*140*/	CBaseCombatCharacter::FVisible(CBaseEntity *,int,CBaseEntity **)
/*141*/	CBaseCombatCharacter::FVisible(Vector  const&,int,CBaseEntity **)
/*142*/	CBaseEntity::CanBeSeenBy(CAI_BaseNPC *)
/*143*/	CBaseEntity::GetAttackDamageScale(CBaseEntity*)
/*144*/	CBaseEntity::GetReceivedDamageScale(CBaseEntity*)
/*145*/	CBaseEntity::GetGroundVelocityToApply(Vector &)
/*146*/	CBaseEntity::PhysicsSplash(Vector  const&,Vector  const&,float,float)
/*147*/	CBaseEntity::Splash(void)
/*148*/	CBaseEntity::WorldSpaceCenter(void)
/*149*/	CBaseEntity::GetSoundEmissionOrigin(void)
/*150*/	CBaseEntity::IsDeflectable(void)
/*151*/	CBaseEntity::Deflected(CBaseEntity*,Vector &)
/*152*/	CAI_BaseNPC::CreateVPhysics(void)
/*153*/	CBaseEntity::ForceVPhysicsCollide(CBaseEntity*)
/*154*/	CBaseEntity::VPhysicsDestroyObject(void)
/*155*/	CBaseCombatCharacter::VPhysicsUpdate(IPhysicsObject *)
/*156*/	CBaseEntity::VPhysicsTakeDamage(CTakeDamageInfo  const&)
/*157*/	CBaseCombatCharacter::VPhysicsShadowCollision(int,gamevcollisionevent_t *)
/*158*/	CBaseEntity::VPhysicsShadowUpdate(IPhysicsObject *)
/*159*/	CBaseEntity::VPhysicsCollision(int,gamevcollisionevent_t *)
/*160*/	CBaseEntity::VPhysicsFriction(IPhysicsObject *,float,int,int)
/*161*/	CBaseEntity::UpdatePhysicsShadowToCurrentPosition(float)
/*162*/	CBaseEntity::VPhysicsGetObjectList(IPhysicsObject **,int)
/*163*/	CBaseEntity::VPhysicsIsFlesh(void)
/*164*/	CBaseEntity::HasPhysicsAttacker(float)
/*165*/	CAI_BaseNPC::PhysicsSolidMaskForEntity(void)
/*166*/	CBaseEntity::ResolveFlyCollisionCustom(CGameTrace &,Vector &)
/*167*/	CBaseEntity::PerformCustomPhysics(Vector *,Vector *,QAngle *,QAngle *)
/*168*/	CBaseAnimating::GetStepOrigin(void)
/*169*/	CBaseAnimating::GetStepAngles(void)
/*170*/	CBaseEntity::ShouldDrawWaterImpacts(void)
/*171*/	CBaseEntity::NetworkStateChanged_m_fFlags(void)
/*172*/	CBaseEntity::NetworkStateChanged_m_fFlags(void *)
/*173*/	CBaseEntity::NetworkStateChanged_m_nWaterLevel(void)
/*174*/	CBaseEntity::NetworkStateChanged_m_nWaterLevel(void *)
/*175*/	CBaseEntity::NetworkStateChanged_m_hGroundEntity(void)
/*176*/	CBaseEntity::NetworkStateChanged_m_hGroundEntity(void *)
/*177*/	CBaseEntity::NetworkStateChanged_m_vecBaseVelocity(void)
/*178*/	CBaseEntity::NetworkStateChanged_m_vecBaseVelocity(void *)
/*179*/	CBaseEntity::NetworkStateChanged_m_flFriction(void)
/*180*/	CBaseEntity::NetworkStateChanged_m_flFriction(void *)
/*181*/	CBaseEntity::NetworkStateChanged_m_vecVelocity(void)
/*182*/	CBaseEntity::NetworkStateChanged_m_vecVelocity(void *)
/*183*/	CBaseEntity::NetworkStateChanged_m_vecViewOffset(void)
/*184*/	CBaseEntity::NetworkStateChanged_m_vecViewOffset(void *)
/*185*/	CBaseEntity::VPhysicsGetElement(int)
/*186*/	CBaseEntity::OnOwnerChanged(void)
/*187*/	CBaseEntity::IsARagdoll(void)
/*188*/	CBaseEntity::SetMaterialOverride(char  const*)
/*189*/	CBaseEntity::GetMaterialOverride(void)
/*190*/	CBaseEntity::IsPredicted(void)
/*191*/	CBaseEntity::IsWeapon(void)
/*192*/	CBaseEntity::IsVehicle(void)
/*193*/	CSENT_AI::UsesLua(void)
/*194*/	CSENT_AI::onLuaRefresh(char  const*)
/*195*/	CBaseEntity::onLuaRefreshed(void)
/*196*/	CBaseEntity::LuaDoReload(int)
/*197*/	CSENT_AI::GetLuaEntityType(void)
/*198*/	CBaseEntity::PushEntity(void)
/*199*/	CBaseEntity::Push_This_Entity(void)
/*200*/	CBaseEntity::SetPhysObject(int,IPhysicsObject *)
/*201*/	CBaseEntity::SetEntity(char  const*,CBaseEntity*)
/*202*/	CBaseEntity::DeleteOnRemove(CBaseEntity*)
/*203*/	CBaseEntity::DontDeleteOnRemove(CBaseEntity*)
/*204*/	CBaseEntity::GetParentPhysicsNum(void)
/*205*/	CBaseEntity::SetParentPhysicsNum(int)
/*206*/	CBaseEntity::StartMotionController(void)
/*207*/	CBaseEntity::StopMotionController(void)
/*208*/	CBaseEntity::SaveLua(ISave &)
/*209*/	CBaseEntity::LoadLua(IRestore &)
/*210*/	CSENT_AI::SetUseType(int)
/*211*/	CBaseEntity::UpdateBeforeRemove(int)
/*212*/	CSENT_AI::GetLuaScriptName(void)
/*213*/	CBaseEntity::SpawnedViaLua(void)
/*214*/	CBaseEntity::SetLuaTable(ILuaObject *)
/*215*/	CSENT_AI::GetLuaTable(void)
/*216*/	CBaseEntity::GetLuaEntity(void)
/*217*/	CBaseEntity::GetMetaTable(void)
/*218*/	CBaseEntity::HasLuaTable(void)
/*219*/	CBaseAnimating::GetIdealSpeed(void)
/*220*/	CBaseAnimating::GetIdealAccel(void)
/*221*/	CAI_BaseActor::StudioFrameAdvance(void)
/*222*/	CAI_BaseNPC::IsActivityFinished(void)
/*223*/	CBaseAnimating::GetSequenceGroundSpeed(CStudioHdr *,int)
/*224*/	CBaseAnimating::ClampRagdollForce(Vector  const&,Vector*)
/*225*/	CBaseAnimating::BecomeRagdollOnClient(Vector  const&)
/*226*/	CBaseAnimating::IsRagdoll(void)
/*227*/	CBaseAnimating::CanBecomeRagdoll(void)
/*228*/	CBaseAnimatingOverlay::GetSkeleton(CStudioHdr *,Vector *,Quaternion *,int)
/*229*/	CBaseAnimating::GetBoneTransform(int,matrix3x4_t &)
/*230*/	CBaseAnimating::SetupBones(matrix3x4_t *,int)
/*231*/	CBaseAnimating::CalculateIKLocks(float)
/*232*/	CBaseAnimatingOverlay::DispatchAnimEvents(CBaseAnimating *)
/*233*/	CSENT_AI::HandleAnimEvent(animevent_t *)
/*234*/	CAI_BaseNPC::PopulatePoseParameters(void)
/*235*/	CBaseAnimating::GetAttachment(int,matrix3x4_t &)
/*236*/	CBaseAnimating::InitBoneControllers(void)
/*237*/	CBaseAnimating::GetGroundSpeedVelocity(void)
/*238*/	CAI_BaseNPC::Ignite(float,bool,float,bool)
/*239*/	CBaseAnimating::IgniteLifetime(float)
/*240*/	CBaseAnimating::IgniteNumHitboxFires(int)
/*241*/	CBaseAnimating::IgniteHitboxFireScale(float)
/*242*/	CBaseAnimating::Extinguish(void)
/*243*/	CBaseCombatCharacter::SetLightingOriginRelative(CBaseEntity *)
/*244*/	CBaseAnimating::SetLightingOrigin(CBaseEntity *)
/*245*/	CBaseAnimating::SetFlexWeight(int,float)
/*246*/	CBaseAnimating::GetFlexWeight(int)
/*247*/	CBaseAnimating::SetFlexScale(float)
/*248*/	CBaseAnimating::GetFlexScale(void)
/*249*/	CBaseAnimating::SetViewTarget(Vector)
/*250*/	CBaseAnimating::GetPhysBoneNumber(int)
/*251*/	CAI_BaseActor::SetViewtarget(Vector  const&)
/*252*/	CAI_BaseActor::StartSceneEvent(CSceneEventInfo *,CChoreoScene *,CChoreoEvent *,CChoreoActor *,CBaseEntity *)
/*253*/	CBaseFlex::ProcessSceneEvents(void)
/*254*/	CAI_BaseActor::ProcessSceneEvent(CSceneEventInfo *,CChoreoScene *,CChoreoEvent *)
/*255*/	CAI_BaseActor::ClearSceneEvent(CSceneEventInfo *,bool,bool)
/*256*/	CAI_BaseActor::CheckSceneEventCompletion(CSceneEventInfo *,float,CChoreoScene *,CChoreoEvent *)
/*257*/	CBaseFlex::PlayScene(char  const*,float,AI_Response *,IRecipientFilter *)
/*258*/	CBaseFlex::PlayAutoGeneratedSoundScene(char  const*)
/*259*/	CBaseCombatCharacter::GetPhysicsImpactDamageTable(void)
/*260*/	CBaseCombatCharacter::FInViewCone(CBaseEntity *)
/*261*/	CBaseCombatCharacter::FInViewCone(Vector  const&)
/*262*/	CBaseCombatCharacter::FInAimCone(CBaseEntity *)
/*263*/	CAI_BaseNPC::FInAimCone(Vector  const&)
/*264*/	CBaseCombatCharacter::ShouldShootMissTarget(CBaseCombatCharacter*)
/*265*/	CBaseCombatCharacter::FindMissTarget(void)
/*266*/	CAI_BaseHumanoid::HandleInteraction(int,void *,CBaseCombatCharacter *)
/*267*/	CBaseCombatCharacter::BodyAngles(void)
/*268*/	CBaseCombatCharacter::BodyDirection2D(void)
/*269*/	CBaseCombatCharacter::BodyDirection3D(void)
/*270*/	CAI_BaseActor::HeadDirection2D(void)
/*271*/	CAI_BaseActor::HeadDirection3D(void)
/*272*/	CAI_BaseActor::EyeDirection2D(void)
/*273*/	CAI_BaseActor::EyeDirection3D(void)
/*274*/	CBaseCombatCharacter::IsHiddenByFog(Vector  const&)
/*275*/	CBaseCombatCharacter::IsHiddenByFog(CBaseEntity *)
/*276*/	CBaseCombatCharacter::IsHiddenByFog(float)
/*277*/	CBaseCombatCharacter::GetFogObscuredRatio(Vector  const&)
/*278*/	CBaseCombatCharacter::GetFogObscuredRatio(CBaseEntity *)
/*279*/	CBaseCombatCharacter::GetFogObscuredRatio(float)
/*280*/	CBaseCombatCharacter::IsLookingTowards(CBaseEntity  const*,float)
/*281*/	CBaseCombatCharacter::IsLookingTowards(Vector  const&,float)
/*282*/	CBaseCombatCharacter::IsInFieldOfView(CBaseEntity *)
/*283*/	CBaseCombatCharacter::IsInFieldOfView(Vector  const&)
/*284*/	CBaseCombatCharacter::IsLineOfSightClear(CBaseEntity *,CBaseCombatCharacter::LineOfSightCheckType)
/*285*/	CBaseCombatCharacter::IsLineOfSightClear(Vector  const&,CBaseCombatCharacter::LineOfSightCheckType,CBaseEntity *)
/*286*/	CBaseCombatCharacter::GiveAmmo(int,int,bool)
/*287*/	CAI_BehaviorHost<CAI_BaseNPC>::NPC_TranslateActivity(Activity)
/*288*/	CBaseCombatCharacter::Weapon_TranslateActivity(Activity,bool *)
/*289*/	CBaseCombatCharacter::Weapon_FrameUpdate(void)
/*290*/	CBaseCombatCharacter::Weapon_HandleAnimEvent(animevent_t *)
/*291*/	CBaseCombatCharacter::Weapon_CanUse(CBaseCombatWeapon *)
/*292*/	CBaseCombatCharacter::Weapon_Equip(CBaseCombatWeapon *)
/*293*/	CBaseCombatCharacter::Weapon_EquipAmmoOnly(CBaseCombatWeapon *)
/*294*/	CBaseCombatCharacter::Weapon_Drop(CBaseCombatWeapon *,Vector  const*,Vector  const*)
/*295*/	CBaseCombatCharacter::Weapon_Switch(CBaseCombatWeapon *,int)
/*296*/	CAI_BaseNPC::Weapon_ShootPosition(void)
/*297*/	CBaseCombatCharacter::Weapon_CanSwitchTo(CBaseCombatWeapon *)
/*298*/	CBaseCombatCharacter::Weapon_SlotOccupied(CBaseCombatWeapon *)
/*299*/	CBaseCombatCharacter::Weapon_GetSlot(int)
/*300*/	CBaseCombatCharacter::AddPlayerItem(CBaseCombatWeapon *)
/*301*/	CBaseCombatCharacter::RemovePlayerItem(CBaseCombatWeapon *)
/*302*/	CBaseCombatCharacter::CanBecomeServerRagdoll(void)
/*303*/	CAI_BehaviorHost<CAI_BaseNPC>::OnTakeDamage_Alive(CTakeDamageInfo  const&)
/*304*/	CAI_BaseNPC::OnTakeDamage_Dying(CTakeDamageInfo  const&)
/*305*/	CAI_BaseNPC::OnTakeDamage_Dead(CTakeDamageInfo  const&)
/*306*/	CBaseCombatCharacter::GetAliveDuration(void)
/*307*/	CAI_BehaviorHost<CAI_BaseNPC>::OnFriendDamaged(CBaseCombatCharacter *,CBaseEntity *)
/*308*/	CAI_BaseNPC::NotifyFriendsOfDamage(CBaseEntity *)
/*309*/	CBaseCombatCharacter::HasEverBeenInjured(int)
/*310*/	CBaseCombatCharacter::GetTimeSinceLastInjury(int)
/*311*/	CBaseCombatCharacter::OnPlayerKilledOther(CBaseEntity *,CTakeDamageInfo  const&)
/*312*/	CBaseCombatCharacter::GetDeathActivity(void)
/*313*/	CBaseCombatCharacter::CorpseGib(CTakeDamageInfo  const&)
/*314*/	CBaseCombatCharacter::CorpseFade(void)
/*315*/	CBaseCombatCharacter::HasHumanGibs(void)
/*316*/	CBaseCombatCharacter::HasAlienGibs(void)
/*317*/	CAI_BaseNPC::ShouldGib(CTakeDamageInfo  const&)
/*318*/	CBaseCombatCharacter::OnKilledNPC(CBaseCombatCharacter*)
/*319*/	CAI_BaseNPC::Event_Gibbed(CTakeDamageInfo  const&)
/*320*/	CBaseCombatCharacter::Event_Dying(void)
/*321*/	CBaseCombatCharacter::BecomeRagdoll(CTakeDamageInfo  const&,Vector  const&)
/*322*/	CBaseCombatCharacter::FixupBurningServerRagdoll(CBaseEntity *)
/*323*/	CBaseCombatCharacter::BecomeRagdollBoogie(CBaseEntity *,Vector  const&,float,int)
/*324*/	CBaseCombatCharacter::CheckTraceHullAttack(float,Vector  const&,Vector  const&,int,int,float,bool)
/*325*/	CBaseCombatCharacter::CheckTraceHullAttack(Vector  const&,Vector  const&,Vector  const&,Vector  const&,int,int,float,bool)
/*326*/	CBaseCombatCharacter::PushawayTouch(CBaseEntity *)
/*327*/	CSENT_AI::IRelationType(CBaseEntity *)
/*328*/	CBaseCombatCharacter::IRelationPriority(CBaseEntity *)
/*329*/	CBaseCombatCharacter::IsInAVehicle(void)
/*330*/	CBaseCombatCharacter::GetVehicle(void)
/*331*/	CBaseCombatCharacter::GetVehicleEntity(void)
/*332*/	CBaseCombatCharacter::ExitVehicle(void)
/*333*/	CBaseCombatCharacter::RemoveAllWeapons(void)
/*334*/	CBaseCombatCharacter::CalcWeaponProficiency(CBaseCombatWeapon *)
/*335*/	CSENT_AI::GetAttackSpread(CBaseCombatWeapon *,CBaseEntity *)
/*336*/	CAI_BaseNPC::GetSpreadBias(CBaseCombatWeapon *,CBaseEntity *)
/*337*/	CBaseCombatCharacter::DoMuzzleFlash(void)
/*338*/	CAI_BaseNPC::AddEntityRelationship(CBaseEntity *,Disposition_t,int)
/*339*/	CBaseCombatCharacter::RemoveEntityRelationship(CBaseEntity *)
/*340*/	CAI_BaseNPC::AddClassRelationship(Class_T,Disposition_t,int)
/*341*/	CAI_BehaviorHost<CAI_BaseNPC>::OnChangeActiveWeapon(CBaseCombatWeapon *,CBaseCombatWeapon *)
/*342*/	CBaseCombatCharacter::GetLastKnownArea(void)
/*343*/	CBaseCombatCharacter::IsAreaTraversable(CNavArea  const*)
/*344*/	CBaseCombatCharacter::ClearLastKnownArea(void)
/*345*/	CBaseCombatCharacter::UpdateLastKnownArea(void)
/*346*/	CBaseCombatCharacter::OnNavAreaChanged(CNavArea *,CNavArea *)
/*347*/	CBaseCombatCharacter::OnNavAreaRemoved(CNavArea *)
/*348*/	CBaseCombatCharacter::OnPursuedBy(INextBot *)
/*349*/	CBaseCombatCharacter::NetworkStateChanged_m_iAmmo(void)
/*350*/	CBaseCombatCharacter::NetworkStateChanged_m_iAmmo(void *)
/*351*/	CAI_BehaviorHost<CAI_BaseNPC>::NPCInit(void)
/*352*/	CAI_BaseNPC::PostNPCInit(void)
/*353*/	CAI_BaseNPC::StartNPC(void)
/*354*/	CAI_BehaviorHost<CAI_BaseNPC>::CleanupOnDeath(CBaseEntity *,bool)
/*355*/	CAI_BaseActor::CreateComponents(void)
/*356*/	CAI_BaseNPC::CreateSenses(void)
/*357*/	CAI_BaseNPC::CreateMoveProbe(void)
/*358*/	CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC>>::CreateMotor(void)
/*359*/	CAI_BaseNPC::CreateLocalNavigator(void)
/*360*/	CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC>>::CreateNavigator(void)
/*361*/	CAI_BaseNPC::CreatePathfinder(void)
/*362*/	CAI_BaseNPC::CreateTacticalServices(void)
/*363*/	CAI_BaseNPC::NPCThink(void)
/*364*/	CAI_BaseNPC::RunAI(void)
/*365*/	CAI_BehaviorHost<CAI_BaseNPC>::GatherConditions(void)
/*366*/	CAI_BehaviorHost<CAI_BaseNPC>::PrescheduleThink(void)
/*367*/	CAI_BaseNPC::PostscheduleThink(void)
/*368*/	CAI_BehaviorHost<CAI_BaseNPC>::OnScheduleChange(void)
/*369*/	CAI_BehaviorHost<CAI_BaseNPC>::OnStartSchedule(int)
/*370*/	CSENT_AI::SelectSchedule(void)
/*371*/	CAI_BehaviorHost<CAI_BaseNPC>::SelectFailSchedule(int,int,int)
/*372*/	CSENT_AI::TranslateSchedule(int)
/*373*/	CSENT_AI::StartTask(Task_t  const*)
/*374*/	CSENT_AI::RunTask(Task_t  const*)
/*375*/	CAI_BehaviorHost<CAI_BaseNPC>::IsInterruptable(void)
/*376*/	CAI_BaseNPC::OnStartScene(void)
/*377*/	CAI_BehaviorHost<CAI_BaseNPC>::ShouldPlayerAvoid(void)
/*378*/	CAI_BaseNPC::SetPlayerAvoidState(void)
/*379*/	CAI_BaseNPC::PlayerPenetratingVPhysics(void)
/*380*/	CAI_BehaviorHost<CAI_BaseNPC>::ShouldAlwaysThink(void)
/*381*/	CAI_BaseNPC::LineOfSightDist(Vector  const&,float)
/*382*/	CAI_BaseNPC::PostRunStopMoving(void)
/*383*/	CSENT_AI::MaintainSchedule(void)
/*384*/	CAI_BaseNPC::StartTask(Task_t *)
/*385*/	CAI_BaseNPC::RunTask(Task_t *)
/*386*/	CSENT_AI::SetSchedule(int)
/*387*/	CAI_BehaviorHost<CAI_BaseNPC>::GetSchedule(int)
/*388*/	CAI_BaseNPC::GetLocalScheduleId(int)
/*389*/	CAI_BaseNPC::GetGlobalScheduleId(int)
/*390*/	CAI_BaseNPC::TaskFail(int)
/*391*/	CSENT_AI::TaskComplete(bool)
/*392*/	CAI_BehaviorHost<CAI_BaseNPC>::TaskName(int)
/*393*/	CAI_BaseNPC::GetLocalTaskId(int)
/*394*/	CAI_BaseNPC::GetSchedulingErrorName(void)
/*395*/	CAI_BaseNPC::LoadedSchedules(void)
/*396*/	CAI_BaseHumanoid::BuildScheduleTestBits(void)
/*397*/	CAI_BehaviorHost<CAI_BaseNPC>::GetNewSchedule(void)
/*398*/	CAI_BehaviorHost<CAI_BaseNPC>::GetFailSchedule(void)
/*399*/	CAI_BehaviorHost<CAI_BaseNPC>::CanFlinch(void)
/*400*/	CAI_BaseNPC::CheckFlinches(void)
/*401*/	CAI_BaseNPC::PlayFlinchGesture(void)
/*402*/	CAI_BaseNPC::IsAllowedToDodge(void)
/*403*/	CAI_BaseNPC::SelectDeadSchedule(void)
/*404*/	CAI_BehaviorHost<CAI_BaseNPC>::GetRunningBehavior(void)
/*405*/	CAI_BaseNPC::ShouldAcceptGoal(CAI_BehaviorBase *,CAI_GoalEntity *)
/*406*/	CAI_BaseNPC::OnClearGoal(CAI_BehaviorBase *,CAI_GoalEntity *)
/*407*/	CAI_BehaviorHost<CAI_BaseNPC>::OnBehaviorChangeStatus(CAI_BehaviorBase *,bool)
/*408*/	CAI_BehaviorHost<CAI_BaseNPC>::AccessBehaviors(void)
/*409*/	CAI_BehaviorHost<CAI_BaseNPC>::NumBehaviors(void)
/*410*/	CAI_BaseNPC::ConditionName(int)
/*411*/	CAI_BaseNPC::RemoveIgnoredConditions(void)
/*412*/	CSENT_AI::SetCondition(int)
/*413*/	CAI_BaseNPC::ClearCondition(int)
/*414*/	CAI_BaseNPC::ClearConditions(int *,int)
/*415*/	CAI_BaseNPC::SelectIdealState(void)
/*416*/	CAI_BaseNPC::ShouldGoToIdleState(void)
/*417*/	CAI_BaseActor::OnStateChange(NPC_STATE,NPC_STATE)
/*418*/	CAI_BaseNPC::UpdateEfficiency(bool)
/*419*/	CAI_BaseNPC::Wake(bool)
/*420*/	CAI_BaseNPC::SetActivity(Activity)
/*421*/	CAI_BaseNPC::IsActivityMovementPhased(Activity)
/*422*/	CAI_BaseNPC::OnChangeActivity(Activity)
/*423*/	CAI_BehaviorHost<CAI_BaseNPC>::QueryHearSound(CSound *)
/*424*/	CAI_BaseNPC::QuerySeeEntity(CBaseEntity *,bool)
/*425*/	CAI_BaseNPC::OnLooked(int)
/*426*/	CAI_BaseNPC::OnListened(void)
/*427*/	CAI_BehaviorHost<CAI_BaseNPC>::OnSeeEntity(CBaseEntity *)
/*428*/	CAI_BaseNPC::ShouldNotDistanceCull(void)
/*429*/	CSENT_AI::GetSoundInterests(void)
/*430*/	CAI_BaseNPC::GetSoundPriority(CSound *)
/*431*/	CAI_BaseNPC::GetBestSound(int)
/*432*/	CAI_BaseNPC::GetBestScent(void)
/*433*/	CAI_BaseNPC::HearingSensitivity(void)
/*434*/	CAI_BehaviorHost<CAI_BaseNPC>::ShouldIgnoreSound(CSound *)
/*435*/	CAI_BaseNPC::ClearSenseConditions(void)
/*436*/	CAI_BehaviorHost<CAI_BaseNPC>::BestEnemy(void)
/*437*/	CAI_BehaviorHost<CAI_BaseNPC>::IsValidEnemy(CBaseEntity *)
/*438*/	CAI_BaseNPC::CanBeAnEnemyOf(CBaseEntity *)
/*439*/	CAI_BaseNPC::ShouldChooseNewEnemy(void)
/*440*/	CAI_BaseNPC::GatherEnemyConditions(CBaseEntity *)
/*441*/	CAI_BaseNPC::EnemyDistTolerance(void)
/*442*/	CAI_BaseNPC::StartTargetHandling(CBaseEntity *)
/*443*/	CAI_BaseNPC::CreateCustomTarget(Vector  const&,float)
/*444*/	CAI_BaseNPC::ShouldPickADeathPose(void)
/*445*/	CAI_BaseNPC::AllowedToIgnite(void)
/*446*/	CAI_BaseNPC::GetGoalRepathTolerance(CBaseEntity *,GoalType_t,Vector  const&,Vector  const&)
/*447*/	CAI_BaseNPC::IsCommandable(void)
/*448*/	CAI_BaseNPC::IsPlayerAlly(CBasePlayer *)
/*449*/	CAI_BaseNPC::IsMedic(void)
/*450*/	CAI_BaseNPC::IsCommandMoving(void)
/*451*/	CAI_BaseNPC::ShouldAutoSummon(void)
/*452*/	CAI_BaseNPC::SetCommandGoal(Vector  const&)
/*453*/	CAI_BaseNPC::ClearCommandGoal(void)
/*454*/	CAI_BaseNPC::OnTargetOrder(void)
/*455*/	CAI_BaseNPC::OnMoveOrder(void)
/*456*/	CAI_BaseNPC::IsValidCommandTarget(CBaseEntity *)
/*457*/	CAI_BaseNPC::OnMoveToCommandGoalFailed(void)
/*458*/	CAI_BaseNPC::GetSquadCommandRepresentative(void)
/*459*/	CAI_BaseNPC::TargetOrder(CBaseEntity *,CAI_BaseNPC**,int)
/*460*/	CAI_BaseNPC::MoveOrder(Vector  const&,CAI_BaseNPC**,int)
/*461*/	CAI_BaseNPC::CanBeUsedAsAFriend(void)
/*462*/	CAI_BehaviorHost<CAI_BaseNPC>::CanRunAScriptedNPCInteraction(bool)
/*463*/	CAI_BaseNPC::CanPlaySequence(bool,int)
/*464*/	CAI_BaseNPC::CanPlaySentence(bool)
/*465*/	CAI_ExpresserHost<CAI_BaseHumanoid>::PlaySentence(char  const*,float,float,soundlevel_t,CBaseEntity *)
/*466*/	CAI_BaseNPC::PlayScriptedSentence(char  const*,float,float,soundlevel_t,bool,CBaseEntity *)
/*467*/	CAI_BaseNPC::FOkToMakeSound(int)
/*468*/	CAI_BaseNPC::JustMadeSound(int,float)
/*469*/	CAI_BaseNPC::DeathSound(CTakeDamageInfo  const&)
/*470*/	CAI_BaseNPC::AlertSound(void)
/*471*/	CAI_BaseNPC::IdleSound(void)
/*472*/	CAI_BaseNPC::PainSound(CTakeDamageInfo  const&)
/*473*/	CAI_BaseNPC::FearSound(void)
/*474*/	CAI_BaseNPC::LostEnemySound(void)
/*475*/	CAI_BaseNPC::FoundEnemySound(void)
/*476*/	CAI_BaseNPC::BarnacleDeathSound(void)
/*477*/	CAI_BaseNPC::SpeakSentence(int)
/*478*/	CAI_BaseNPC::ShouldPlayIdleSound(void)
/*479*/	CAI_BaseNPC::MakeAIFootstepSound(float,float)
/*480*/	CAI_BaseActor::GetExpresser(void)
/*481*/	CAI_BaseNPC::CanRespondToEvent(char  const*)
/*482*/	CAI_BaseNPC::RespondedTo(char  const*,bool,bool)
/*483*/	CAI_BaseNPC::PlayerHasIlluminatedNPC(CBasePlayer *,float)
/*484*/	CAI_BaseNPC::CapabilitiesGet(void)
/*485*/	CAI_BehaviorHost<CAI_BaseNPC>::IsNavigationUrgent(void)
/*486*/	CAI_BaseNPC::ShouldFailNav(bool)
/*487*/	CAI_BaseActor::ShouldBruteForceFailedNav(void)
/*488*/	CAI_BlendingHost<CAI_BehaviorHost<CAI_BaseNPC>>::GetTimeToNavGoal(void)
/*489*/	CAI_BaseNPC::MovementCost(int,Vector  const&,Vector  const&,float *)
/*490*/	CAI_BaseNPC::CalcIdealYaw(Vector  const&)
/*491*/	CSENT_AI::MaxYawSpeed(void)
/*492*/	CAI_BaseNPC::AddFacingTarget(CBaseEntity *,float,float,float)
/*493*/	CAI_BaseNPC::AddFacingTarget(Vector  const&,float,float,float)
/*494*/	CAI_BaseNPC::AddFacingTarget(CBaseEntity *,Vector  const&,float,float,float)
/*495*/	CAI_BaseNPC::GetFacingDirection(Vector &)
/*496*/	CAI_BaseNPC::IsJumpLegal(Vector  const&,Vector  const&,Vector  const&)
/*497*/	CAI_BaseNPC::StepHeight(void)
/*498*/	CAI_BaseNPC::GetMaxJumpSpeed(void)
/*499*/	CAI_BaseNPC::GetJumpGravity(void)
/*500*/	CAI_BaseNPC::OverrideMove(float)
/*501*/	CAI_BaseNPC::OverrideMoveFacing(AILocalMoveGoal_t  const&,float)
/*502*/	CAI_BaseNPC::IsUnusableNode(int,CAI_Hint *)
/*503*/	CAI_BaseNPC::ValidateNavGoal(void)
/*504*/	CAI_BehaviorHost<CAI_BaseNPC>::IsCurTaskContinuousMove(void)
/*505*/	CAI_BaseNPC::IsValidMoveAwayDest(Vector  const&)
/*506*/	CAI_BehaviorHost<CAI_BaseNPC>::OnMovementFailed(void)
/*507*/	CAI_BehaviorHost<CAI_BaseNPC>::OnMovementComplete(void)
/*508*/	CAI_BaseNPC::IsUnreachable(CBaseEntity *)
/*509*/	CAI_BaseNPC::CalcYawSpeed(void)
/*510*/	CAI_BehaviorHost<CAI_BaseNPC>::OnCalcBaseMove(AILocalMoveGoal_t *,float,AIMoveResult_t *)
/*511*/	CAI_BaseNPC::OnObstructionPreSteer(AILocalMoveGoal_t *,float,AIMoveResult_t *)
/*512*/	CAI_BaseNPC::OnObstructingDoor(AILocalMoveGoal_t *,CBaseDoor *,float,AIMoveResult_t *)
/*513*/	CAI_BaseNPC::OnUpcomingPropDoor(AILocalMoveGoal_t *,CBasePropDoor *,float,AIMoveResult_t *)
/*514*/	CAI_BaseNPC::GetNodeViewOffset(void)
/*515*/	CAI_BaseNPC::EyeOffset(Activity)
/*516*/	CAI_BaseNPC::EyeLookTarget(void)
/*517*/	CAI_BaseActor::AddLookTarget(CBaseEntity *,float,float,float)
/*518*/	CAI_BaseActor::AddLookTarget(Vector  const&,float,float,float)
/*519*/	CAI_BaseActor::SetHeadDirection(Vector  const&,float)
/*520*/	CAI_BaseActor::MaintainLookTargets(float)
/*521*/	CAI_BaseActor::ValidEyeTarget(Vector  const&)
/*522*/	CAI_BaseNPC::FacingPosition(void)
/*523*/	CAI_BaseNPC::MaintainTurnActivity(void)
/*524*/	CAI_BehaviorHost<CAI_BaseNPC>::AimGun(void)
/*525*/	CAI_BaseNPC::SetAim(Vector  const&)
/*526*/	CAI_BaseNPC::RelaxAim(void)
/*527*/	CAI_BaseNPC::GetAlternateMoveShootTarget(void)
/*528*/	CAI_BaseNPC::InputOutsideTransition(inputdata_t &)
/*529*/	CAI_BaseNPC::InputInsideTransition(inputdata_t &)
/*530*/	CAI_BaseNPC::SetScriptedScheduleIgnoreConditions(Interruptability_t)
/*531*/	CAI_BehaviorHost<CAI_BaseNPC>::ScheduledMoveToGoalEntity(int,CBaseEntity *,Activity)
/*532*/	CAI_BehaviorHost<CAI_BaseNPC>::ScheduledFollowPath(int,CBaseEntity *,Activity)
/*533*/	CAI_BaseNPC::GetEnemies(void)
/*534*/	CAI_BaseNPC::RemoveMemory(void)
/*535*/	CAI_BaseNPC::UpdateEnemyMemory(CBaseEntity *,Vector  const&,CBaseEntity *)
/*536*/	CAI_BaseNPC::GetReactionDelay(CBaseEntity *)
/*537*/	CAI_BaseNPC::CanHolsterWeapon(void)
/*538*/	CAI_BaseNPC::HolsterWeapon(void)
/*539*/	CAI_BaseNPC::UnholsterWeapon(void)
/*540*/	CAI_BaseNPC::OnRangeAttack1(void)
/*541*/	CAI_BaseNPC::OnUpdateShotRegulator(void)
/*542*/	CAI_BaseNPC::InitSquad(void)
/*543*/	CAI_BaseNPC::SquadSlotName(int)
/*544*/	CAI_BaseNPC::SetSquad(CAI_Squad *)
/*545*/	CAI_BaseNPC::IsSilentSquadMember(void)
/*546*/	CAI_BaseNPC::FindCoverPos(CBaseEntity *,Vector *)
/*547*/	CAI_BaseNPC::FindCoverPosInRadius(CBaseEntity *,Vector  const&,float,Vector*)
/*548*/	CAI_BaseNPC::FindCoverPos(CSound *,Vector *)
/*549*/	CAI_BehaviorHost<CAI_BaseNPC>::IsValidCover(Vector  const&,CAI_Hint  const*)
/*550*/	CAI_BehaviorHost<CAI_BaseNPC>::IsValidShootPosition(Vector  const&,CAI_Node *,CAI_Hint  const*)
/*551*/	CAI_BaseNPC::TestShootPosition(Vector  const&,Vector  const&)
/*552*/	CAI_BaseNPC::IsCoverPosition(Vector  const&,Vector  const&)
/*553*/	CAI_BaseNPC::CoverRadius(void)
/*554*/	CAI_BehaviorHost<CAI_BaseNPC>::GetMaxTacticalLateralMovement(void)
/*555*/	CAI_BehaviorHost<CAI_BaseNPC>::OnChangeHintGroup(string_t,string_t)
/*556*/	CAI_BaseNPC::ShouldFadeOnDeath(void)
/*557*/	CAI_BaseNPC::RangeAttack1Conditions(float,float)
/*558*/	CAI_BaseNPC::RangeAttack2Conditions(float,float)
/*559*/	CAI_BaseNPC::MeleeAttack1Conditions(float,float)
/*560*/	CAI_BaseNPC::MeleeAttack2Conditions(float,float)
/*561*/	CAI_BaseNPC::InnateRange1MinRange(void)
/*562*/	CAI_BaseNPC::InnateRange1MaxRange(void)
/*563*/	CAI_BaseNPC::OnBeginMoveAndShoot(void)
/*564*/	CAI_BaseNPC::OnEndMoveAndShoot(void)
/*565*/	CAI_BaseNPC::UseAttackSquadSlots(void)
/*566*/	CAI_BaseNPC::FindNamedEntity(char  const*,IEntityFindFilter *)
/*567*/	CAI_BaseNPC::ClearAttackConditions(void)
/*568*/	CAI_BaseNPC::ShouldLookForBetterWeapon(void)
/*569*/	CAI_BaseNPC::GiveWeapon(string_t)
/*570*/	CAI_BaseNPC::OnGivenWeapon(CBaseCombatWeapon *)
/*571*/	CAI_BaseNPC::WeaponLOSCondition(Vector  const&,Vector  const&,bool)
/*572*/	CAI_BaseNPC::CurrentWeaponLOSCondition(Vector  const&,bool)
/*573*/	CAI_BaseNPC::IsWaitingToRappel(void)
/*574*/	CAI_BaseNPC::BeginRappel(void)
/*575*/	CAI_BaseNPC::TranslateNavGoal(CBaseEntity *,Vector &)
/*576*/	CAI_BehaviorHost<CAI_BaseNPC>::GetDefaultNavGoalTolerance(void)
/*577*/	CAI_BaseNPC::FCanCheckAttacks(void)
/*578*/	CAI_BaseHumanoid::CheckAmmo(void)
/*579*/	CAI_BehaviorHost<CAI_BaseNPC>::FValidateHintType(CAI_Hint *)
/*580*/	CAI_BaseNPC::GetHintActivity(short,Activity)
/*581*/	CAI_BaseNPC::GetHintDelay(short)
/*582*/	CAI_BaseNPC::GetCoverActivity(CAI_Hint *)
/*583*/	CAI_BaseNPC::GetReloadActivity(CAI_Hint *)
/*584*/	CAI_BaseNPC::SetTurnActivity(void)
/*585*/	CAI_BaseNPC::GetHitgroupDamageMultiplier(int,CTakeDamageInfo  const&)
/*586*/	CAI_BaseNPC::PlayerInSpread(Vector  const&,Vector  const&,float,float,bool)
/*587*/	CAI_BaseNPC::InnateWeaponLOSCondition(Vector  const&,Vector  const&,bool)
/*588*/	CAI_BehaviorHost<CAI_BaseNPC>::GetFlinchActivity(bool,bool)
/*589*/	CAI_BaseNPC::GetShootEnemyDir(Vector  const&,bool)
/*590*/	CAI_BaseNPC::GetActualShootPosition(Vector  const&)
/*591*/	CAI_BaseNPC::GetActualShootTrajectory(Vector  const&)
/*592*/	CAI_BaseNPC::CollectShotStats(Vector  const&,Vector  const&)
/*593*/	CAI_BaseNPC::ShouldMoveAndShoot(void)
/*594*/	CAI_BaseNPC::IsLightDamage(CTakeDamageInfo  const&)
/*595*/	CAI_BaseNPC::IsHeavyDamage(CTakeDamageInfo  const&)
/*596*/	CAI_BaseNPC::PickupWeapon(CBaseCombatWeapon *)
/*597*/	CAI_BaseNPC::PickupItem(CBaseEntity *)
/*598*/	CAI_BaseNPC::NotifyDeadFriend(CBaseEntity *)
/*599*/	CAI_BaseNPC::CalcReasonableFacing(bool)
/*600*/	CAI_BaseNPC::IsValidReasonableFacing(Vector  const&,float)
/*601*/	CAI_BehaviorHost<CAI_BaseNPC>::GetReasonableFacingDist(void)
/*602*/	CAI_BaseNPC::GetClassScheduleIdSpace(void)
/*603*/	CAI_BaseNPC::GetSquadSlotDebugName(int)
/*604*/	CAI_BehaviorHost<CAI_BaseNPC>::IsCrouching(void)
/*605*/	CAI_BaseNPC::Crouch(void)
/*606*/	CAI_BaseNPC::Stand(void)
/*607*/	CAI_BaseNPC::DesireCrouch(void)
/*608*/	CAI_BehaviorHost<CAI_BaseNPC>::IsCrouchedActivity(Activity)
/*609*/	CAI_BaseNPC::GetCrouchEyeOffset(void)
/*610*/	CAI_BaseNPC::GetCrouchGunOffset(void)
/*611*/	CAI_BaseNPC::ReportAIState(void)
/*612*/	CAI_BaseNPC::ReportOverThinkLimit(float)
/*613*/	CAI_BaseNPC::ShouldProbeCollideAgainstEntity(CBaseEntity *)
/*614*/	CSENT_AI::CreateBehaviors(void)
/*615*/	CAI_BehaviorHost<CAI_BaseNPC>::ForceSelectedGo(CBaseEntity *,Vector  const&,Vector  const&,bool)
/*616*/	CAI_BehaviorHost<CAI_BaseNPC>::ForceSelectedGoRandom(void)
/*617*/	CAI_BehaviorHost<CAI_BaseNPC>::SpeakMapmakerInterruptConcept(string_t)
/*618*/	CAI_BehaviorHost<CAI_BaseNPC>::OnChangeRunningBehavior(CAI_BehaviorBase *,CAI_BehaviorBase *)
/*619*/	CAI_BehaviorHost<CAI_BaseNPC>::ShouldBehaviorSelectSchedule(CAI_BehaviorBase *)
/*620*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_GatherConditions(void)
/*621*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_SelectSchedule(void)
/*622*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_TranslateSchedule(int)
/*623*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_NPC_TranslateActivity(Activity)
/*624*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_IsValidEnemy(CBaseEntity *)
/*625*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_BestEnemy(void)
/*626*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_IsValidCover(Vector  const&,CAI_Hint  const*)
/*627*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_IsValidShootPosition(Vector  const&,CAI_Node *,CAI_Hint  const*)
/*628*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_GetMaxTacticalLateralMovement(void)
/*629*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_ShouldIgnoreSound(CSound *)
/*630*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_OnSeeEntity(CBaseEntity *)
/*631*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_OnFriendDamaged(CBaseCombatCharacter *,CBaseEntity *)
/*632*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_IsInterruptable(void)
/*633*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_IsNavigationUrgent(void)
/*634*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_ShouldPlayerAvoid(void)
/*635*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_OnTakeDamage_Alive(CTakeDamageInfo  const&)
/*636*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_GetDefaultNavGoalTolerance(void)
/*637*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_GetReasonableFacingDist(void)
/*638*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_CanFlinch(void)
/*639*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_IsCrouching(void)
/*640*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_IsCrouchedActivity(Activity)
/*641*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_QueryHearSound(CSound *)
/*642*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_CanRunAScriptedNPCInteraction(bool)
/*643*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_GetFlinchActivity(bool,bool)
/*644*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_OnCalcBaseMove(AILocalMoveGoal_t *,float,AIMoveResult_t *)
/*645*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_ModifyOrAppendCriteria(AI_CriteriaSet &)
/*646*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_Teleport(Vector  const*,QAngle  const*,Vector  const*)
/*647*/	CAI_BehaviorHost<CAI_BaseNPC>::BackBridge_HandleAnimEvent(animevent_t *)
/*648*/	CAI_BaseHumanoid::OnMoveBlocked(AIMoveResult_t *)
/*649*/	CAI_BaseActor::StartTaskRangeAttack1(Task_t  const*)
/*650*/	CAI_BaseHumanoid::RunTaskRangeAttack1(Task_t  const*)
/*651*/	CAI_ExpresserHost<CAI_BaseHumanoid>::NoteSpeaking(float,float)
/*652*/	CAI_ExpresserHost<CAI_BaseHumanoid>::Speak(char  const*,char  const*,char *,ulong,IRecipientFilter *)
/*653*/	CAI_ExpresserHost<CAI_BaseHumanoid>::PostSpeakDispatchResponse(char  const*,AI_Response *)
/*654*/	CAI_BaseActor::OnNewLookTarget(void)
/*655*/	CAI_BaseActor::PickLookTarget(bool,float,float)
/*656*/	CAI_BaseActor::PickLookTarget(CAI_InterestTarget &,bool,float,float)
/*657*/	CAI_BaseActor::PickTacticalLookTarget(AILookTargetArgs_t *)
/*658*/	CAI_BaseActor::PickRandomLookTarget(AILookTargetArgs_t *)
/*659*/	CAI_BaseActor::MakeRandomLookTarget(AILookTargetArgs_t *,float,float)
/*660*/	CAI_BaseActor::HasActiveLookTargets(void)
/*661*/	CAI_BaseActor::OnSelectedLookTarget(AILookTargetArgs_t *)
/*662*/	CAI_BaseActor::ClearLookTarget(CBaseEntity *)
/*663*/	CAI_BaseActor::ExpireCurrentRandomLookTarget(void)
/*664*/	CAI_BaseActor::GetHeadDebounce(void)
/*665*/	CAI_BaseActor::ValidHeadTarget(Vector  const&)
/*666*/	CAI_BaseActor::HeadTargetValidity(Vector  const&)
/*667*/	CAI_BaseActor::PlayExpressionForState(NPC_STATE)
/*668*/	CAI_BaseActor::SelectRandomExpressionForState(NPC_STATE)
/*669*/	CAI_BaseActor::UseSemaphore(void)
/*670*/	CAI_BaseActor::CreateExpresser(void)
/*671*/	CSENT_AI::ScriptThink(void)
/*672*/	CSENT_AI::doKeyValue(char  const*,char  const*)
/*673*/	CSENT_AI::ScriptUse(CBaseEntity *,CBaseEntity *,USE_TYPE,float)
/*674*/	CSENT_AI::UseBehaviour_NONE(void)
/*675*/	CSENT_AI::UseBehaviour_ActBusy(void)
/*676*/	CSENT_AI::UseBehaviour_FuncTank(void)
/*677*/	CSENT_AI::UseBehaviour_Follow(void)
/*678*/	CSENT_AI::UseBehaviour_Assault(void)
/*679*/	CSENT_AI::UseBehaviour_Lead(void)
