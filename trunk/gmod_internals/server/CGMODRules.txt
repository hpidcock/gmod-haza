// Listing generated from "server.dylib" by linux_vtable_dump.ida
// vtable block @ 0x00D5B780
/*0*/	CGameRules::Name(void)
/*1*/	CMultiplayRules::Init(void)
/*2*/	CBaseGameSystemPerFrame::PostInit(void)
/*3*/	CBaseGameSystemPerFrame::Shutdown(void)
/*4*/	CBaseGameSystemPerFrame::LevelInitPreEntity(void)
/*5*/	CBaseGameSystemPerFrame::LevelInitPostEntity(void)
/*6*/	CBaseGameSystemPerFrame::LevelShutdownPreEntity(void)
/*7*/	CBaseGameSystemPerFrame::LevelShutdownPostEntity(void)
/*8*/	CBaseGameSystemPerFrame::OnSave(void)
/*9*/	CBaseGameSystemPerFrame::OnRestore(void)
/*10*/	CBaseGameSystemPerFrame::SafeRemoveIfDesired(void)
/*11*/	CBaseGameSystemPerFrame::IsPerFrame(void)
/*12*/	CGMODRules::~CGMODRules()
/*13*/	CGMODRules::~CGMODRules()
/*14*/	CBaseGameSystemPerFrame::FrameUpdatePreEntityThink(void)
/*15*/	CGameRules::FrameUpdatePostEntityThink(void)
/*16*/	CBaseGameSystemPerFrame::PreClientUpdate(void)
/*17*/	CMultiplayRules::Damage_IsTimeBased(int)
/*18*/	CMultiplayRules::Damage_ShouldGibCorpse(int)
/*19*/	CMultiplayRules::Damage_ShowOnHUD(int)
/*20*/	CMultiplayRules::Damage_NoPhysicsForce(int)
/*21*/	CMultiplayRules::Damage_ShouldNotBleed(int)
/*22*/	CMultiplayRules::Damage_GetTimeBased(void)
/*23*/	CMultiplayRules::Damage_GetShouldGibCorpse(void)
/*24*/	CMultiplayRules::Damage_GetShowOnHud(void)
/*25*/	CMultiplayRules::Damage_GetNoPhysicsForce(void)
/*26*/	CMultiplayRules::Damage_GetShouldNotBleed(void)
/*27*/	CMultiplayRules::SwitchToNextBestWeapon(CBaseCombatCharacter *,CBaseCombatWeapon *)
/*28*/	CMultiplayRules::GetNextBestWeapon(CBaseCombatCharacter *,CBaseCombatWeapon *)
/*29*/	CHL2MPRules::ShouldCollide(int,int)
/*30*/	CGameRules::DefaultFOV(void)
/*31*/	CHL2MPRules::GetViewVectors(void)
/*32*/	CGameRules::GetAmmoDamage(CBaseEntity *,CBaseEntity *,int)
/*33*/	CGameRules::GetDamageMultiplier(void)
/*34*/	CMultiplayRules::IsMultiplayer(void)
/*35*/	CGMODRules::GetEncryptionKey(void)
/*36*/	CGameRules::InRoundRestart(void)
/*37*/	CGameRules::AllowThirdPersonCamera(void)
/*38*/	CMultiplayRules::ClientCommandKeyValues(edict_t *,KeyValues *)
/*39*/	CMultiplayRules::GetTaggedConVarList(KeyValues *)
/*40*/	CGameRules::CheckHaptics(CBasePlayer *)
/*41*/	CGameRules::LevelShutdown(void)
/*42*/	CGMODRules::Precache(void)
/*43*/	CMultiplayRules::RefreshSkillData(bool)
/*44*/	CGMODRules::Think(void)
/*45*/	CMultiplayRules::IsAllowedToSpawn(CBaseEntity *)
/*46*/	CGameRules::EndGameFrame(void)
/*47*/	CGameRules::IsSkillLevel(int)
/*48*/	CGameRules::GetSkillLevel(void)
/*49*/	CGameRules::OnSkillLevelChanged(int)
/*50*/	CGameRules::SetSkillLevel(int)
/*51*/	CMultiplayRules::FAllowFlashlight(void)
/*52*/	CHL2MPRules::FShouldSwitchWeapon(CBasePlayer *,CBaseCombatWeapon *)
/*53*/	CMultiplayRules::IsDeathmatch(void)
/*54*/	CGMODRules::IsTeamplay(void)
/*55*/	CMultiplayRules::IsCoOp(void)
/*56*/	CGMODRules::GetGameDescription(void)
/*57*/	CMultiplayRules::ClientConnected(edict_t *,char  const*,char  const*,char *,int)
/*58*/	CTeamplayRules::InitHUD(CBasePlayer *)
/*59*/	CGMODRules::ClientDisconnected(edict_t *)
/*60*/	CGMODRules::FlPlayerFallDamage(CBasePlayer *)
/*61*/	CGMODRules::FPlayerCanTakeDamage(CBasePlayer *,CBaseEntity *)
/*62*/	CGMODRules::ShouldAutoAim(CBasePlayer *,edict_t *)
/*63*/	CGameRules::GetAutoAimScale(CBasePlayer *)
/*64*/	CGameRules::GetAutoAimMode(void)
/*65*/	CGameRules::ShouldUseRobustRadiusDamage(CBaseEntity *)
/*66*/	CGameRules::RadiusDamage(CTakeDamageInfo  const&,Vector  const&,float,int,CBaseEntity *)
/*67*/	CGMODRules::FlPlayerFallDeathDoesScreenFade(CBasePlayer *)
/*68*/	CMultiplayRules::AllowDamage(CBaseEntity *,CTakeDamageInfo  const&)
/*69*/	CMultiplayRules::PlayerSpawn(CBasePlayer *)
/*70*/	CMultiplayRules::PlayerThink(CBasePlayer *)
/*71*/	CMultiplayRules::FPlayerCanRespawn(CBasePlayer *)
/*72*/	CMultiplayRules::FlPlayerSpawnTime(CBasePlayer *)
/*73*/	CGMODRules::GetPlayerSpawnSpot(CBasePlayer *)
/*74*/	CGameRules::IsSpawnPointValid(CBaseEntity *,CBasePlayer *)
/*75*/	CMultiplayRules::AllowAutoTargetCrosshair(void)
/*76*/	CHL2MPRules::ClientCommand(CBaseEntity *,CCommand  const&)
/*77*/	CGMODRules::ClientSettingsChanged(CBasePlayer *)
/*78*/	CTeamplayRules::IPointsForKill(CBasePlayer *,CBasePlayer *)
/*79*/	CHL2MPRules::PlayerKilled(CBasePlayer *,CTakeDamageInfo  const&)
/*80*/	CGMODRules::DeathNotice(CBasePlayer *,CTakeDamageInfo  const&)
/*81*/	CGameRules::GetDamageCustomString(CTakeDamageInfo  const&)
/*82*/	CGameRules::AdjustPlayerDamageInflicted(float)
/*83*/	CGameRules::AdjustPlayerDamageTaken(CTakeDamageInfo *)
/*84*/	CGMODRules::CanHavePlayerItem(CBasePlayer *,CBaseCombatWeapon *)
/*85*/	CHL2MPRules::WeaponShouldRespawn(CBaseCombatWeapon *)
/*86*/	CHL2MPRules::FlWeaponRespawnTime(CBaseCombatWeapon *)
/*87*/	CHL2MPRules::FlWeaponTryRespawn(CBaseCombatWeapon *)
/*88*/	CHL2MPRules::VecWeaponRespawnSpot(CBaseCombatWeapon *)
/*89*/	CMultiplayRules::CanHaveItem(CBasePlayer *,CItem *)
/*90*/	CMultiplayRules::PlayerGotItem(CBasePlayer *,CItem *)
/*91*/	CGMODRules::ItemShouldRespawn(CItem *)
/*92*/	CHL2MPRules::FlItemRespawnTime(CItem *)
/*93*/	CHL2MPRules::VecItemRespawnSpot(CItem *)
/*94*/	CHL2MPRules::VecItemRespawnAngles(CItem *)
/*95*/	CGameRules::CanHaveAmmo(CBaseCombatCharacter *,int)
/*96*/	CGameRules::CanHaveAmmo(CBaseCombatCharacter *,char  const*)
/*97*/	CMultiplayRules::PlayerGotAmmo(CBaseCombatCharacter *,char *,int)
/*98*/	CGameRules::GetAmmoQuantityScale(int)
/*99*/	CGMODRules::InitDefaultAIRelationships(void)
/*100*/	CGMODRules::AIClassText(int)
/*101*/	CMultiplayRules::FlHealthChargerRechargeTime(void)
/*102*/	CMultiplayRules::FlHEVChargerRechargeTime(void)
/*103*/	CMultiplayRules::DeadPlayerWeapons(CBasePlayer *)
/*104*/	CMultiplayRules::DeadPlayerAmmo(CBasePlayer *)
/*105*/	CTeamplayRules::GetTeamID(CBaseEntity *)
/*106*/	CHL2MPRules::PlayerRelationship(CBaseEntity *,CBaseEntity *)
/*107*/	CTeamplayRules::PlayerCanHearChat(CBasePlayer *,CBasePlayer *)
/*108*/	CGameRules::CheckChatText(CBasePlayer *,char *)
/*109*/	CTeamplayRules::GetTeamIndex(char  const*)
/*110*/	CTeamplayRules::GetIndexedTeamName(int)
/*111*/	CTeamplayRules::IsValidTeam(char  const*)
/*112*/	CTeamplayRules::ChangePlayerTeam(CBasePlayer *,char  const*,bool,bool)
/*113*/	CTeamplayRules::SetDefaultPlayerTeam(CBasePlayer *)
/*114*/	CGameRules::UpdateClientData(CBasePlayer *)
/*115*/	CMultiplayRules::PlayTextureSounds(void)
/*116*/	CMultiplayRules::PlayFootstepSounds(CBasePlayer *)
/*117*/	CMultiplayRules::FAllowNPCs(void)
/*118*/	CMultiplayRules::EndMultiplayerGame(void)
/*119*/	CGameRules::WeaponTraceEntity(CBaseEntity *,Vector  const&,Vector  const&,uint,CGameTrace *)
/*120*/	CGMODRules::CreateStandardEntities(void)
/*121*/	CGameRules::GetChatPrefix(bool,CBasePlayer *)
/*122*/	CGameRules::GetChatLocation(bool,CBasePlayer *)
/*123*/	CHL2MPRules::GetChatFormat(bool,CBasePlayer *)
/*124*/	CGMODRules::ShouldBurningPropsEmitLight(void)
/*125*/	CGameRules::CanEntityBeUsePushed(CBaseEntity *)
/*126*/	CGameRules::CreateCustomNetworkStringTables(void)
/*127*/	CGameRules::MarkAchievement(IRecipientFilter &,char  const*)
/*128*/	CMultiplayRules::ResetMapCycleTimeStamp(void)
/*129*/	CGameRules::OnNavMeshLoad(void)
/*130*/	CGameRules::TacticalMissionManagerFactory(void)
/*131*/	CGameRules::ProcessVerboseLogOutput(void)
/*132*/	CGameRules::GetGameTypeName(void)
/*133*/	CGameRules::GetGameType(void)
/*134*/	CGameRules::ShouldDrawHeadLabels(void)
/*135*/	CMultiplayRules::GetDeathScorer(CBaseEntity *,CBaseEntity *,CBaseEntity *)
/*136*/	CMultiplayRules::VoiceCommand(CBaseMultiplayerPlayer *,int,int)
/*137*/	CMultiplayRules::HandleTimeLimitChange(void)
/*138*/	CMultiplayRules::InitCustomResponseRulesDicts(void)
/*139*/	CMultiplayRules::ShutdownCustomResponseRulesDicts(void)
/*140*/	CMultiplayRules::UseSuicidePenalty(void)
/*141*/	CMultiplayRules::GetNextLevelName(char *,int,bool)
/*142*/	CMultiplayRules::ChangeLevel(void)
/*143*/	CHL2MPRules::GoToIntermission(void)
/*144*/	CTeamplayRules::GetCaptureValueForPlayer(CBasePlayer *)
/*145*/	CTeamplayRules::TeamMayCapturePoint(int,int)
/*146*/	CTeamplayRules::PlayerMayCapturePoint(CBasePlayer *,int,char *,int)
/*147*/	CTeamplayRules::PlayerMayBlockPoint(CBasePlayer *,int,char *,int)
/*148*/	CTeamplayRules::PointsMayBeCaptured(void)
/*149*/	CTeamplayRules::SetLastCapPointChanged(int)
/*150*/	CTeamplayRules::TimerMayExpire(void)
/*151*/	CTeamplayRules::SetWinningTeam(int,int,bool,bool,bool)
/*152*/	CTeamplayRules::SetStalemate(int,bool,bool)
/*153*/	CTeamplayRules::SetSwitchTeams(bool)
/*154*/	CTeamplayRules::ShouldSwitchTeams(void)
/*155*/	CTeamplayRules::HandleSwitchTeams(void)
/*156*/	CTeamplayRules::SetScrambleTeams(bool)
/*157*/	CTeamplayRules::ShouldScrambleTeams(void)
/*158*/	CTeamplayRules::HandleScrambleTeams(void)
/*159*/	CTeamplayRules::PointsMayAlwaysBeBlocked(void)
/*160*/	CGMODRules::CleanUpMap(CLuaObject &)
