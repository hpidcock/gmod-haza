// Listing generated from "server.dylib" by linux_vtable_dump.ida
// vtable block @ 0x00D5F980
/*0*/	CSENT_brush::~CSENT_brush()
/*1*/	CSENT_brush::~CSENT_brush()
/*2*/	CBaseEntity::SetRefEHandle(CBaseHandle  const&)
/*3*/	CBaseEntity::GetRefEHandle(void)
/*4*/	CBaseEntity::GetCollideable(void)
/*5*/	CBaseEntity::GetNetworkable(void)
/*6*/	CBaseEntity::GetBaseEntity(void)
/*7*/	CBaseEntity::GetModelIndex(void)
/*8*/	CBaseEntity::GetModelName(void)
/*9*/	CBaseEntity::SetModelIndex(int)
/*10*/	CBaseEntity::GetServerClass(void)
/*11*/	CBaseEntity::YouForgotToImplementOrDeclareServerClass(void)
/*12*/	CSENT_brush::GetDataDescMap(void)
/*13*/	CBaseEntity::TestCollision(Ray_t  const&,uint,CGameTrace &)
/*14*/	CBaseEntity::TestHitboxes(Ray_t  const&,uint,CGameTrace &)
/*15*/	CBaseEntity::ComputeWorldSpaceSurroundingBox(Vector *,Vector *)
/*16*/	CBaseEntity::ShouldCollide(int,int)
/*17*/	CBaseEntity::SetOwnerEntity(CBaseEntity*)
/*18*/	CBaseEntity::ShouldTransmit(CCheckTransmitInfo  const*)
/*19*/	CBaseEntity::UpdateTransmitState(void)
/*20*/	CBaseEntity::SetTransmit(CCheckTransmitInfo *,bool)
/*21*/	CBaseEntity::GetTracerType(void)
/*22*/	CSENT_brush::Spawn(void)
/*23*/	CSENT_brush::Precache(void)
/*24*/	CBaseEntity::SetModel(char  const*)
/*25*/	CBaseEntity::PostConstructor(char  const*)
/*26*/	CBaseTrigger::PostClientActive(void)
/*27*/	CBaseEntity::ParseMapData(CEntityMapData *)
/*28*/	CSENT_brush::KeyValue(char  const*,char  const*)
/*29*/	CBaseToggle::KeyValue(char  const*,float)
/*30*/	CBaseEntity::KeyValue(char  const*,Vector  const&)
/*31*/	CBaseEntity::GetKeyValue(char  const*,char *,int)
/*32*/	CBaseTrigger::Activate(void)
/*33*/	CBaseEntity::SetParent(CBaseEntity*,int)
/*34*/	CBaseEntity::ObjectCaps(void)
/*35*/	CSENT_brush::AcceptInput(char  const*,CBaseEntity *,CBaseEntity *,variant_t,int)
/*36*/	CBaseEntity::GetInputDispatchEffectPosition(char  const*,Vector &,QAngle &)
/*37*/	CBaseEntity::DrawDebugGeometryOverlays(void)
/*38*/	CBaseTrigger::DrawDebugTextOverlays(void)
/*39*/	CBaseEntity::Save(ISave &)
/*40*/	CBaseEntity::Restore(IRestore &)
/*41*/	CBaseEntity::ShouldSavePhysics(void)
/*42*/	CBaseEntity::OnSave(IEntitySaveUtils *)
/*43*/	CSENT_brush::OnRestore(void)
/*44*/	CBaseEntity::RequiredEdictIndex(void)
/*45*/	CBaseToggle::MoveDone(void)
/*46*/	CBaseEntity::Think(void)
/*47*/	CBaseEntity::NetworkStateChanged_m_nNextThinkTick(void)
/*48*/	CBaseEntity::NetworkStateChanged_m_nNextThinkTick(void *)
/*49*/	CBaseEntity::GetBaseAnimating(void)
/*50*/	CBaseEntity::GetResponseSystem(void)
/*51*/	CBaseEntity::DispatchResponse(char  const*)
/*52*/	CBaseEntity::Classify(void)
/*53*/	CBaseEntity::DeathNotice(CBaseEntity*)
/*54*/	CBaseEntity::ShouldAttractAutoAim(CBaseEntity*)
/*55*/	CBaseEntity::GetAutoAimRadius(void)
/*56*/	CBaseEntity::GetAutoAimCenter(void)
/*57*/	CBaseEntity::GetBeamTraceFilter(void)
/*58*/	CBaseEntity::PassesDamageFilter(CTakeDamageInfo  const&)
/*59*/	CBaseEntity::TraceAttack(CTakeDamageInfo  const&,Vector  const&,CGameTrace *)
/*60*/	CBaseEntity::CanBeHitByMeleeAttack(CBaseEntity*)
/*61*/	CBaseEntity::OnTakeDamage(CTakeDamageInfo  const&)
/*62*/	CBaseEntity::AdjustDamageDirection(CTakeDamageInfo  const&,Vector &,CBaseEntity*)
/*63*/	CBaseEntity::TakeHealth(float,int)
/*64*/	CBaseEntity::IsAlive(void)
/*65*/	CBaseEntity::Event_Killed(CTakeDamageInfo  const&)
/*66*/	CBaseEntity::Event_KilledOther(CBaseEntity*,CTakeDamageInfo  const&)
/*67*/	CBaseEntity::BloodColor(void)
/*68*/	CBaseEntity::IsTriggered(CBaseEntity*)
/*69*/	CBaseEntity::IsNPC(void)
/*70*/	CBaseEntity::MyCombatCharacterPointer(void)
/*71*/	CBaseEntity::MyNextBotPointer(void)
/*72*/	CBaseToggle::GetDelay(void)
/*73*/	CBaseEntity::IsMoving(void)
/*74*/	CBaseEntity::DamageDecal(int,int)
/*75*/	CBaseEntity::DecalTrace(CGameTrace *,char  const*)
/*76*/	CBaseEntity::ImpactTrace(CGameTrace *,int,char *)
/*77*/	CBaseEntity::OnControls(CBaseEntity*)
/*78*/	CBaseEntity::HasTarget(string_t)
/*79*/	CBaseEntity::IsPlayer(void)
/*80*/	CBaseEntity::IsNetClient(void)
/*81*/	CBaseEntity::IsTemplate(void)
/*82*/	CBaseEntity::IsBaseObject(void)
/*83*/	CBaseEntity::IsBaseTrain(void)
/*84*/	CBaseEntity::IsBaseCombatWeapon(void)
/*85*/	CBaseEntity::IsWearable(void)
/*86*/	CBaseEntity::MyCombatWeaponPointer(void)
/*87*/	CBaseEntity::GetServerVehicle(void)
/*88*/	CBaseEntity::IsViewable(void)
/*89*/	CBaseEntity::ChangeTeam(int)
/*90*/	CBaseEntity::OnEntityEvent(EntityEvent_t,void *)
/*91*/	CBaseEntity::CanStandOn(CBaseEntity*)
/*92*/	CBaseEntity::CanStandOn(edict_t *)
/*93*/	CBaseEntity::GetEnemy(void)
/*94*/	CBaseEntity::GetEnemy(void)
/*95*/	CBaseEntity::ViewPunch(QAngle  const&)
/*96*/	CBaseEntity::Use(CBaseEntity*,CBaseEntity*,USE_TYPE,float)
/*97*/	CSENT_brush::StartTouch(CBaseEntity *)
/*98*/	CSENT_brush::Touch(CBaseEntity *)
/*99*/	CSENT_brush::EndTouch(CBaseEntity *)
/*100*/	CBaseEntity::StartBlocked(CBaseEntity*)
/*101*/	CBaseEntity::Blocked(CBaseEntity*)
/*102*/	CBaseEntity::EndBlocked(void)
/*103*/	CBaseEntity::PhysicsSimulate(void)
/*104*/	CSENT_brush::UpdateOnRemove(void)
/*105*/	CBaseEntity::StopLoopingSounds(void)
/*106*/	CBaseEntity::SUB_AllowedToFade(void)
/*107*/	CBaseEntity::Teleport(Vector  const*,QAngle  const*,Vector  const*)
/*108*/	CBaseEntity::NotifySystemEvent(CBaseEntity*,notify_system_event_t,notify_system_event_params_t  const&)
/*109*/	CBaseEntity::MakeTracer(Vector  const&,CGameTrace  const&,int)
/*110*/	CBaseEntity::GetTracerAttachment(void)
/*111*/	CBaseEntity::FireBullets(FireBulletsInfo_t  const&)
/*112*/	CBaseEntity::DoImpactEffect(CGameTrace &,int)
/*113*/	CBaseEntity::ModifyFireBulletsDamage(CTakeDamageInfo *)
/*114*/	CBaseEntity::Respawn(void)
/*115*/	CBaseToggle::IsLockedByMaster(void)
/*116*/	CBaseEntity::GetMaxHealth(void)
/*117*/	CBaseEntity::ModifyOrAppendCriteria(AI_CriteriaSet &)
/*118*/	CBaseEntity::NetworkStateChanged_m_iMaxHealth(void)
/*119*/	CBaseEntity::NetworkStateChanged_m_iMaxHealth(void *)
/*120*/	CBaseEntity::NetworkStateChanged_m_iHealth(void)
/*121*/	CBaseEntity::NetworkStateChanged_m_iHealth(void *)
/*122*/	CBaseEntity::NetworkStateChanged_m_lifeState(void)
/*123*/	CBaseEntity::NetworkStateChanged_m_lifeState(void *)
/*124*/	CBaseEntity::NetworkStateChanged_m_takedamage(void)
/*125*/	CBaseEntity::NetworkStateChanged_m_takedamage(void *)
/*126*/	CBaseEntity::GetDamageType(void)
/*127*/	CBaseEntity::GetDamage(void)
/*128*/	CBaseEntity::SetDamage(float)
/*129*/	CBaseEntity::EyePosition(void)
/*130*/	CBaseEntity::EyeAngles(void)
/*131*/	CBaseEntity::LocalEyeAngles(void)
/*132*/	CBaseEntity::EarPosition(void)
/*133*/	CBaseEntity::BodyTarget(Vector  const&,bool)
/*134*/	CBaseEntity::HeadTarget(Vector  const&)
/*135*/	CBaseEntity::GetVectors(Vector *,Vector *,Vector *)
/*136*/	CBaseEntity::GetViewOffset(void)
/*137*/	CBaseEntity::SetViewOffset(Vector  const&)
/*138*/	CBaseEntity::GetSmoothedVelocity(void)
/*139*/	CBaseEntity::GetVelocity(Vector *,Vector *)
/*140*/	CBaseEntity::FVisible(CBaseEntity*,int,CBaseEntity**)
/*141*/	CBaseEntity::FVisible(Vector  const&,int,CBaseEntity**)
/*142*/	CBaseEntity::CanBeSeenBy(CAI_BaseNPC *)
/*143*/	CBaseEntity::GetAttackDamageScale(CBaseEntity*)
/*144*/	CBaseEntity::GetReceivedDamageScale(CBaseEntity*)
/*145*/	CBaseEntity::GetGroundVelocityToApply(Vector &)
/*146*/	CBaseEntity::PhysicsSplash(Vector  const&,Vector  const&,float,float)
/*147*/	CBaseEntity::Splash(void)
/*148*/	CBaseEntity::WorldSpaceCenter(void)
/*149*/	CBaseEntity::GetSoundEmissionOrigin(void)
/*150*/	CBaseEntity::IsDeflectable(void)
/*151*/	CBaseEntity::Deflected(CBaseEntity*,Vector &)
/*152*/	CBaseEntity::CreateVPhysics(void)
/*153*/	CBaseEntity::ForceVPhysicsCollide(CBaseEntity*)
/*154*/	CBaseEntity::VPhysicsDestroyObject(void)
/*155*/	CBaseEntity::VPhysicsUpdate(IPhysicsObject *)
/*156*/	CBaseEntity::VPhysicsTakeDamage(CTakeDamageInfo  const&)
/*157*/	CBaseEntity::VPhysicsShadowCollision(int,gamevcollisionevent_t *)
/*158*/	CBaseEntity::VPhysicsShadowUpdate(IPhysicsObject *)
/*159*/	CBaseEntity::VPhysicsCollision(int,gamevcollisionevent_t *)
/*160*/	CBaseEntity::VPhysicsFriction(IPhysicsObject *,float,int,int)
/*161*/	CBaseEntity::UpdatePhysicsShadowToCurrentPosition(float)
/*162*/	CBaseEntity::VPhysicsGetObjectList(IPhysicsObject **,int)
/*163*/	CBaseEntity::VPhysicsIsFlesh(void)
/*164*/	CBaseEntity::HasPhysicsAttacker(float)
/*165*/	CBaseEntity::PhysicsSolidMaskForEntity(void)
/*166*/	CBaseEntity::ResolveFlyCollisionCustom(CGameTrace &,Vector &)
/*167*/	CBaseEntity::PerformCustomPhysics(Vector *,Vector *,QAngle *,QAngle *)
/*168*/	CBaseEntity::GetStepOrigin(void)
/*169*/	CBaseEntity::GetStepAngles(void)
/*170*/	CBaseEntity::ShouldDrawWaterImpacts(void)
/*171*/	CBaseEntity::NetworkStateChanged_m_fFlags(void)
/*172*/	CBaseEntity::NetworkStateChanged_m_fFlags(void *)
/*173*/	CBaseEntity::NetworkStateChanged_m_nWaterLevel(void)
/*174*/	CBaseEntity::NetworkStateChanged_m_nWaterLevel(void *)
/*175*/	CBaseEntity::NetworkStateChanged_m_hGroundEntity(void)
/*176*/	CBaseEntity::NetworkStateChanged_m_hGroundEntity(void *)
/*177*/	CBaseEntity::NetworkStateChanged_m_vecBaseVelocity(void)
/*178*/	CBaseEntity::NetworkStateChanged_m_vecBaseVelocity(void *)
/*179*/	CBaseEntity::NetworkStateChanged_m_flFriction(void)
/*180*/	CBaseEntity::NetworkStateChanged_m_flFriction(void *)
/*181*/	CBaseEntity::NetworkStateChanged_m_vecVelocity(void)
/*182*/	CBaseEntity::NetworkStateChanged_m_vecVelocity(void *)
/*183*/	CBaseEntity::NetworkStateChanged_m_vecViewOffset(void)
/*184*/	CBaseEntity::NetworkStateChanged_m_vecViewOffset(void *)
/*185*/	CBaseEntity::VPhysicsGetElement(int)
/*186*/	CBaseEntity::OnOwnerChanged(void)
/*187*/	CBaseEntity::IsARagdoll(void)
/*188*/	CBaseEntity::SetMaterialOverride(char  const*)
/*189*/	CBaseEntity::GetMaterialOverride(void)
/*190*/	CBaseEntity::IsPredicted(void)
/*191*/	CBaseEntity::IsWeapon(void)
/*192*/	CBaseEntity::IsVehicle(void)
/*193*/	CSENT_brush::UsesLua(void)
/*194*/	CSENT_brush::onLuaRefresh(char  const*)
/*195*/	CBaseEntity::onLuaRefreshed(void)
/*196*/	CBaseEntity::LuaDoReload(int)
/*197*/	CSENT_brush::GetLuaEntityType(void)
/*198*/	CBaseEntity::PushEntity(void)
/*199*/	CBaseEntity::Push_This_Entity(void)
/*200*/	CBaseEntity::SetPhysObject(int,IPhysicsObject *)
/*201*/	CBaseEntity::SetEntity(char  const*,CBaseEntity*)
/*202*/	CBaseEntity::DeleteOnRemove(CBaseEntity*)
/*203*/	CBaseEntity::DontDeleteOnRemove(CBaseEntity*)
/*204*/	CBaseEntity::GetParentPhysicsNum(void)
/*205*/	CBaseEntity::SetParentPhysicsNum(int)
/*206*/	CBaseEntity::StartMotionController(void)
/*207*/	CBaseEntity::StopMotionController(void)
/*208*/	CBaseEntity::SaveLua(ISave &)
/*209*/	CBaseEntity::LoadLua(IRestore &)
/*210*/	CBaseEntity::SetUseType(int)
/*211*/	CBaseEntity::UpdateBeforeRemove(int)
/*212*/	CSENT_brush::GetLuaScriptName(void)
/*213*/	CBaseEntity::SpawnedViaLua(void)
/*214*/	CBaseEntity::SetLuaTable(ILuaObject *)
/*215*/	CSENT_brush::GetLuaTable(void)
/*216*/	CBaseEntity::GetLuaEntity(void)
/*217*/	CBaseEntity::GetMetaTable(void)
/*218*/	CBaseEntity::HasLuaTable(void)
/*219*/	CBaseToggle::KeyValue(char  const*,Vector)
/*220*/	CBaseTrigger::InputEnable(inputdata_t &)
/*221*/	CBaseTrigger::InputDisable(inputdata_t &)
/*222*/	CBaseTrigger::InputToggle(inputdata_t &)
/*223*/	CBaseTrigger::InputTouchTest(inputdata_t &)
/*224*/	CBaseTrigger::InputStartTouch(inputdata_t &)
/*225*/	CBaseTrigger::InputEndTouch(inputdata_t &)
/*226*/	CBaseTrigger::UsesFilter(void)
/*227*/	CSENT_brush::PassesTriggerFilters(CBaseEntity *)
/*228*/	CSENT_brush::ScriptThink(void)
/*229*/	CSENT_brush::doKeyValue(char  const*,char  const*)
